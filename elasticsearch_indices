#! /bin/bash

##############
# Munin plugin for elasticsearch document count

# Config
if [ "$1" = "config" ]; then
	indices=$(curl -s -XGET "localhost:9200/_cat/indices?h=index" |grep -v '^\.')
        # bydocs
	echo 'multigraph indicesbydocs'
        echo 'graph_title Elasticsearch index documents'
        echo 'graph_category other'
        echo 'graph_info document count by index'

	for i in $indices
	do
		echo $i'.label '$i
		echo $i'.info documents in '$i
		echo $i'_del.label '$i' deleted'
		echo $i'_del.info deleted documents in '$i
	done

        # bysize
	echo 'multigraph indicesbysize'
        echo 'graph_title Elasticsearch index sizes'
        echo 'graph_category other'
        echo 'graph_info reports index sizes'
        echo 'graph_args --base 1024 -l 0'
	echo 'graph_vlabel bytes'

	for i in $indices
	do
		echo $i'.label '$i
		echo $i'.info documents in '$i
	done

	# bystatus
	echo 'multigraph indicesbystatus'
        echo 'graph_title Elasticsearch indices by status'
        echo 'graph_category other'
        echo 'graph_info indices by status'
	echo 'red.label red'
	echo 'red.colour COLOUR7'
	echo 'red.draw AREASTACK'
	echo 'yellow.label yellow'
	echo 'yellow.colour COLOUR3'
	echo 'yellow.draw AREASTACK'
	echo 'green.label green'
	echo 'green.colour COLOUR0'
	echo 'green.draw AREASTACK'

# Data
else
	docs="multigraph indicesbydocs"
	size="multigraph indicesbysize"
	red=0
	yellow=0
	green=0

	while read line
	do
		docs="$docs\n$(echo $line | cut -f1 -d ' ').value $(echo $line | cut -f3 -d ' ')\n$(echo $line | cut -f1 -d ' ')_del.value $(echo $line | cut -f4 -d ' ')"
		size="$size\n$(echo $line | cut -f1 -d ' ').value $(echo $line | cut -f5 -d ' ')"

		case $(echo $line | cut -f2 -d ' ') in
			red) ((red++)) ;;
			yellow) ((yellow++)) ;;
			green) ((green++)) ;;
		esac
	done < <(curl -s -XGET "localhost:9200/_cat/indices?bytes=b&h=i,h,dc,dd,pri.store.size" | grep -v '^\.')
	# name yellow open 2533 528 12456872

	echo -e $docs
	echo -e $size
	echo -e "multigraph indicesbystatus\nred.value $red\nyellow.value $yellow\ngreen.value $green\n"
fi
